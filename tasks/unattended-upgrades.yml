---
- name: add distribution-specific variables
  include_vars: "{{ ansible_distribution }}.yml"

- name: add Debian Wheezy workaround
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml"
  when: (ansible_distribution == "Debian") and (ansible_distribution_release == "wheezy")

- name: Install packages
  apt:
    name: ['unattended-upgrades', 'apt-listchanges']
    state: "latest"

- name: install reboot dependencies
  import_tasks: reboot.yml
  when: unattended_automatic_reboot|bool

- name: create auto-upgrades configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "0644"
  with_items:
    - src: "auto-upgrades.j2"
      dest: "/etc/apt/apt.conf.d/20auto-upgrades"
    - src: "unattended-upgrades.j2"
      dest: "/etc/apt/apt.conf.d/50unattended-upgrades"

- name: create log files if not exists
  file:
    path: "{{ item }}"
    state: "touch"
  with_items:
    - /var/log/unattended-upgrades/unattended-upgrades-dpkg.log
    - /var/log/unattended-upgrades/unattended-upgrades.log
  changed_when: False

- name: create apt-listchanges configuration
  copy:
    src: "listchanges.conf"
    dest: "/etc/apt/listchanges.conf"
    owner: "root"
    group: "root"
    mode: "0644"

- name: Add cronjob if needed
  copy:
    dest: "/etc/cron.d/ansible-unttended-upgrade"
    content: |
      SHELL=/bin/sh
      PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

      {{ unattended_cronjob_expression }} root [ -x /usr/bin/unattended-upgrade ] && /usr/bin/unattended-upgrade
  when: unattended_cronjob_expression != False
